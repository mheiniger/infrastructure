#cloud-config
ssh_authorized_keys:
  - ${ssh_authorized_key}

write_files:
  - path: /etc/Caddyfile
    permissions: "0755"
    owner: root
    content: |
      ${rancher_domain}
      ${letsencrypt}

      proxy  / rancher:8080 {
        websocket
        proxy_header Host {host}
        proxy_header X-Real-IP {remote}
        proxy_header X-Forwarded-Proto {scheme}
      }

      log stdout
      errors stdout

rancher:
  cloud_init:
    datasources:
      - ec2

  services:
    rancher:
      image: ${rancher_docker_image}
      restart: always
      environment:
        CATTLE_DB_CATTLE_MYSQL_HOST: ${database_host}
        CATTLE_DB_CATTLE_MYSQL_PORT: ${database_port}
        CATTLE_DB_CATTLE_MYSQL_NAME: ${database_name}
        CATTLE_DB_CATTLE_USERNAME: ${database_username}
        CATTLE_DB_CATTLE_PASSWORD: ${database_password}

      labels:
        - io.rancher.os.after=network

    proxy:
      image: abiosoft/caddy:0.8.3
      restart: always
      volumes:
        - /etc/Caddyfile:/etc/Caddyfile
        - /tmp/caddy:/root/.caddy
      ports:
        - 80:80
        - 443:443
      links:
        - rancher:rancher
      labels:
        - io.rancher.os.after=rancher

    newrelic:
      image: uzyexe/newrelic:2.3.0.132
      restart: always
      pid: host
      net: host
      volumes:
        - /dev:/dev
        - /sys/fs/cgroup/:/sys/fs/cgroup:ro
        - /var/run/docker.sock:/var/run/docker.sock:ro

      environment:
        NEW_RELIC_LICENSE_KEY: ${new_relic_license_key}

      labels:
        - io.rancher.os.after=network

    cloudwatch:
      image: bradgignac/logspout-cloudwatch:v0.1.3
      restart: always
      command: cloudwatch://rancher
      volumes:
        - /var/run/docker.sock:/tmp/docker.sock

      environment:
        AWS_REGION: ${cloudwatch_aws_region}
        AWS_ACCESS_KEY_ID: ${cloudwatch_aws_access_key}
        AWS_SECRET_ACCESS_KEY: ${cloudwatch_aws_secret_key}

      labels:
        - io.rancher.os.after=network

    cloudwatch-system:
      image: bradgignac/logspout-cloudwatch:v0.1.3
      restart: always
      command: cloudwatch://rancher-system
      volumes:
        - /var/run/system-docker.sock:/tmp/docker.sock

      environment:
        AWS_REGION: ${cloudwatch_aws_region}
        AWS_ACCESS_KEY_ID: ${cloudwatch_aws_access_key}
        AWS_SECRET_ACCESS_KEY: ${cloudwatch_aws_secret_key}

      labels:
        - io.rancher.os.scope=system
        - io.rancher.os.after=network
